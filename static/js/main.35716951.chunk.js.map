{"version":3,"sources":["Header.js","Footer.js","Aim.jsx","timers/Blank.jsx","timers/counter/Counter.jsx","timers/counter/Timer.jsx","timers/LongBreak.jsx","timers/Regular.jsx","timers/ShortBreak.jsx","timers/TestBreak.jsx","Switch.jsx","Main.jsx","App.jsx","serviceWorker.js","index.js","Const.jsx"],"names":["Header","Navbar","bg","variant","Brand","href","Footer","sticky","Aim","states","useState","isTodo","setTodo","InputGroup","className","FormControl","placeholder","Append","Button","type","onClick","length","Blank","Card","Body","Counter","minutes","seconds","Timer","period","remainingTime","initial","remaining","result","undefined","finished","difference","Date","Math","floor","Audio","play","twoSign","count","getTime","plus","start","setRemaining","useEffect","setTimeout","document","title","LongBreak","Regular","ShortBreak","TestBreak","Switch","componentName","show","LONG_BREAK","SHORT_BREAK","REGULAR","TEST_BREAK","Main","state","value","numTask","handleChange","val","setState","addTask","tasks","index","this","push","Row","Col","ToggleButtonGroup","name","onChange","ToggleButton","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports","NONE"],"mappings":"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","file":"static/js/main.35716951.chunk.js","sourcesContent":["import React from 'react'\nimport { Navbar } from 'react-bootstrap'\n\nfunction Header() {\n    return (\n        <Navbar bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand href=\"#home\">PomodoroX</Navbar.Brand>\n        </Navbar>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport { Navbar } from 'react-bootstrap'\n\nfunction Footer() {\n    return (\n        <Navbar bg=\"dark\" variant=\"dark\" sticky=\"bottom\">\n            PomidoroX &copy; 2021\n        </Navbar>\n    )\n}\n\nexport default Footer\n","import React, { useState } from 'react'\nimport { Button, FormControl, InputGroup } from 'react-bootstrap'\n\nfunction Aim() {\n    const states = ['todo', 'working', 'done']\n    const colors = ['secondary', 'primary', 'success']\n    const [isTodo, setTodo] = useState(0)\n\n    const handleClick = () => {\n        setTodo((isTodo + 1) % states.length)\n    }\n\n    return (\n        <div>\n            <InputGroup className=\"mb-3\">\n                <FormControl\n                    placeholder=\"Task\"\n                    aria-label=\"Task\"\n                    aria-describedby=\"basic-addon2\"\n                />\n                <InputGroup.Append>\n                    <Button\n                        type=\"checkbox\"\n                        onClick={() => handleClick()}\n                        variant={colors[isTodo]}\n                    >\n                        {states[isTodo]}\n                    </Button>\n                </InputGroup.Append>\n            </InputGroup>\n        </div>\n    )\n}\n\nexport default Aim\n","import React from 'react'\nimport { Card } from 'react-bootstrap'\n\nfunction Blank() {\n    return (\n        <Card className=\"m-2\">\n            <Card.Body>Choose period.</Card.Body>\n        </Card>\n    )\n}\n\nexport default Blank\n","import React from 'react'\nimport { Card } from 'react-bootstrap'\n\nexport const Counter = ({ minutes, seconds }) => {\n    return (\n        <Card className=\"m-2\">\n            <Card.Body>\n                <code>\n                    <h1>\n                        {minutes}:{seconds}\n                    </h1>\n                </code>\n            </Card.Body>\n        </Card>\n    )\n}\n","import React, { useEffect } from 'react'\nimport { Counter } from './Counter'\nimport { useState } from 'react'\n\nexport const Timer = ({ period }) => {\n    const remainingTime = (initial, remaining) => {\n        let result\n\n        if (remaining === undefined || remaining.finished === false) {\n            const difference = initial - new Date()\n\n            if (difference > 0) {\n                result = {\n                    ...remaining,\n                    remaining: {\n                        minutes: Math.floor((difference / 1000 / 60) % 60),\n                        seconds: Math.floor((difference / 1000) % 60),\n                    },\n                    finished: false,\n                }\n            } else {\n                result = {\n                    ...remaining,\n                    remaining: {\n                        minutes: 0,\n                        seconds: 0,\n                    },\n                    finished: true,\n                }\n            }\n        } else {\n            result = remaining;\n            const sound = new Audio('https://actions.google.com/sounds/v1/household/clock_ticking.ogg');\n            sound.play()\n        }\n\n        return result\n    }\n\n    const plus = (minutes, seconds = 0) => {\n        return new Date(new Date().getTime() + minutes * 60000 + seconds * 1000)\n    }\n\n    const show = () => {\n        return (\n            <Counter\n                minutes={twoSign(remaining.remaining.minutes)}\n                seconds={twoSign(remaining.remaining.seconds)}\n            />\n        )\n    }\n\n    const twoSign = (count) => {\n        return count >= 10 ? count : '0' + count\n    }\n\n    const setTitle = () => {\n        document.title =\n            twoSign(remaining.remaining.minutes) +\n            ' : ' +\n            twoSign(remaining.remaining.seconds)\n    }\n\n    const [start] = useState(plus(period.minutes, period.seconds))\n    const [remaining, setRemaining] = useState(\n        remainingTime(start, { finished: false })\n    )\n\n    useEffect(() => {\n        setTimeout(() => {\n            setRemaining(remainingTime(start, remaining))\n            setTitle()\n        }, 1000)\n    })\n\n    return show()\n}\n\nexport default Timer\n","import React from 'react'\nimport Timer from './counter/Timer'\n\nfunction LongBreak() {\n    return <Timer period={{ minutes: 10, seconds: 0 }} />\n}\n\nexport default LongBreak\n","import React from 'react'\nimport { Timer } from './counter/Timer'\n\nfunction Regular() {\n    return <Timer period={{ minutes: 25, seconds: 0 }} />\n}\n\nexport default Regular\n","import React from 'react'\nimport { Timer } from './counter/Timer'\n\nfunction ShortBreak() {\n    return <Timer period={{ minutes: 5, seconds: 0 }} />\n}\n\nexport default ShortBreak\n","import React from 'react'\nimport Timer from './counter/Timer'\n\nfunction TestBreak() {\n    return <Timer period={{ minutes: 0, seconds: 5 }} />\n}\n\nexport default TestBreak\n","import React from 'react'\nimport { LONG_BREAK, REGULAR, SHORT_BREAK, TEST_BREAK } from './Const'\nimport Blank from './timers/Blank'\nimport LongBreak from './timers/LongBreak'\nimport Regular from './timers/Regular'\nimport ShortBreak from './timers/ShortBreak'\nimport TestBreak from './timers/TestBreak';\n\nexport const Switch = ({ show }) => {\n    const selectedElement = (componentName) => {\n        if (componentName === LONG_BREAK) {\n            return <LongBreak />\n        } else if (componentName === SHORT_BREAK) {\n            return <ShortBreak />\n        } else if (componentName === REGULAR) {\n            return <Regular />\n        } else if (componentName === TEST_BREAK) {\n            return <TestBreak />\n        } else {\n            return <Blank />\n        }\n    }\n\n    return selectedElement(show)\n}\n\nexport default Switch\n","import React from 'react'\nimport {\n    Row,\n    Col,\n    ToggleButton,\n    ToggleButtonGroup,\n    Button,\n} from 'react-bootstrap'\nimport { LONG_BREAK, REGULAR, SHORT_BREAK, TEST_BREAK } from './Const'\nimport Aim from './Aim'\nimport { Switch } from './Switch'\n\nclass Main extends React.Component {\n    state = {\n        value: [],\n        numTask: 1,\n    }\n\n    handleChange = (val) => this.setState({ value: val })\n\n    addTask = () => this.setState({ numTask: this.state.numTask + 1 })\n\n    render() {\n        const tasks = []\n\n        for (let index = 0; index < this.state.numTask; index++) {\n            tasks.push(<Aim />)\n        }\n\n        return (\n            <div className=\"m-2\">\n                <Row>\n                    <Col>{tasks}</Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <Button\n                            className=\"float-right\"\n                            variant=\"secondary\"\n                            onClick={() => this.addTask()}\n                        >\n                            +\n                        </Button>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <ToggleButtonGroup\n                            className=\"flex-wrap\"\n                            type=\"radio\"\n                            name=\"options\"\n                            value={this.state.value}\n                            onChange={this.handleChange}\n                        >\n                            <ToggleButton value={REGULAR}>Regular</ToggleButton>\n                            <ToggleButton value={SHORT_BREAK}>\n                                Short break\n                            </ToggleButton>\n                            <ToggleButton value={LONG_BREAK}>\n                                Long break\n                            </ToggleButton>\n                            <ToggleButton value={TEST_BREAK}>\n                                Test break\n                            </ToggleButton>\n                        </ToggleButtonGroup>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <Switch show={this.state.value} />\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n\nexport default Main\n","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css'\nimport Header from './Header'\nimport Footer from './Footer'\nimport Main from './Main'\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Header name={'PomodoroX'} />\n            <Main />\n            <Footer />\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","module.exports = {\n    REGULAR: 'REGULAR',\n    SHORT_BREAK: 'SHORT_BREAK',\n    LONG_BREAK: 'LONG_BREAK',\n    TEST_BREAK: 'TEST_BREAK',\n    NONE: 'NONE',\n}\n"],"sourceRoot":""}